doctype html
// description
html(lang='en')
  head
    meta(charset='utf-8')
    title Educator
    meta(name='viewport', content='width=device-width, initial-scale=1')
    meta(name='Description', content='Find more detailed information about the course')
    link(rel='stylesheet', type='text/css', href='resources/css/main.css')
  body
    header
      .logo-box
        a(href='/')
          img.logo(src='resources/Images/logo.png', alt='Logo')
      nav
        ul.navbar
          li
            a(href='/') Home
          li
            a(href='concurrency') Concurrency
          li
            a(href='schedule') Schedule
          li
            a(href='assignments') Assignments
          li
            a(href='description') Description
          li
            a(href='info') Information
          li
            a(href='courses') Courses
    section.normal-section
      h1 Course description
      p
        br
        |  The course introduces concepts of concurrency and parallelism through the programming language Haskell.
        br
        br
        |  Concrete topics treated in this course include expicit management and synchronisation of threads, as well as higher-level concurrency and parallelism abstractions. These ideas appear not only in Haskell, but in other modern languages such as C#, Scala, and Swift. An important part of the course is devoted to 
        i reasoning
        |  about the properties of concurrent programs.
        br
        br
        |  The language Haskell imposes strong separation between 
        i pure
        |  computations, which are always safe to execute in parallel, and those with 
        i side-effects
        | , which may result in non-deterministic behaviour when executed concurrently.
        br
      h2 Schedule
      p
        | The load per week is 2 * 2 hour 
        a(href='schedule') lectures
        |  and 2 * 2 hour 
        a(href='assignments') werkcollege
        | . Attendance is not strictly mandatory (albeit recommended).
        br
      h2 Grading
      p The final grade depends on the two exams and the assignments
      ul
        li
          | The 
          i theory
          |  grade is T = 0.4 * grade of mid-term + 0.6 * grade of final exam. You need T >= 5 to pass the course.
        li
          | The 
          i practical
          |  grade P = 0.2 * first practical + 0.4 * second practical + 0.4 * third practical. You need P >= 5 to pass the course.
      p
        | The final grade is computed as F = 0.5 * T + 0.5 * P. If you have done all of the practicals and at least one exam, then the final result of the course is:
      ul
        li Passed with grade F (rounded to half points) if F ≥ 5.5 and T ≥ 5 and P ≥ 5.
        li Not passed with grade 5.0 if F ≥ 5.5 but T < 5 or P < 5
        li Not passed with grade F otherwise
      p
        | If you have 
        i not
        |  submitted one of the practical assignments, or have not taken any of the exams, then the final result is:
      ul
        li AANV if F >= 4
        li NVD otherwise
      p
        | Results from previous years are 
        b not
        |  transported to this year.
    footer
      | © Utrecht University 2020
